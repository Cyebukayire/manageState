{"remainingRequest":"/home/peace/Desktop/Tutorials/vue/managing-state/begin/vue-heroes/node_modules/babel-loader/lib/index.js!/home/peace/Desktop/Tutorials/vue/managing-state/begin/vue-heroes/node_modules/eslint-loader/index.js??ref--13-0!/home/peace/Desktop/Tutorials/vue/managing-state/begin/vue-heroes/src/shared/logging-mixins.js","dependencies":[{"path":"/home/peace/Desktop/Tutorials/vue/managing-state/begin/vue-heroes/src/shared/logging-mixins.js","mtime":1630839369200},{"path":"/home/peace/Desktop/Tutorials/vue/managing-state/begin/vue-heroes/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/peace/Desktop/Tutorials/vue/managing-state/begin/vue-heroes/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/peace/Desktop/Tutorials/vue/managing-state/begin/vue-heroes/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport { logger } from \"./\";\nvar hookMessageSuffix = 'hook called (from mixin)';\nexport var lifecycleHooks = {\n  // Computeds\n  computed: {\n    componentName: function componentName() {\n      return \"\".concat(this.$options.name, \" component\");\n    }\n  },\n  // LifeCycle Hooks\n  created: function created() {\n    logger.info(\"\".concat(this.componentName, \" created \").concat(hookMessageSuffix));\n    logger.info('component data', this.$data);\n  },\n  mounted: function mounted() {\n    logger.info(\"\".concat(this.componentName, \" mounted \").concat(hookMessageSuffix));\n  },\n  updated: function updated() {\n    logger.info(\"\".concat(this.componentName, \" updated \").concat(hookMessageSuffix));\n  },\n  destroyed: function destroyed() {\n    logger.info(\"\".concat(this.componentName, \" destroyed \").concat(hookMessageSuffix));\n  }\n};\nexport var heroWatchers = {\n  // Watchers\n  watch: {\n    selectedHero: {\n      immediate: true,\n      deep: true,\n      handler: function handler(newValue, oldValue) {\n        logger.info('old values', oldValue);\n        logger.info('new values', newValue);\n      }\n    }\n  }\n};",{"version":3,"sources":["/home/peace/Desktop/Tutorials/vue/managing-state/begin/vue-heroes/src/shared/logging-mixins.js"],"names":["logger","hookMessageSuffix","lifecycleHooks","computed","componentName","$options","name","created","info","$data","mounted","updated","destroyed","heroWatchers","watch","selectedHero","immediate","deep","handler","newValue","oldValue"],"mappings":";AAAA,SAASA,MAAT;AAEA,IAAMC,iBAAiB,GAAG,0BAA1B;AAEA,OAAO,IAAMC,cAAc,GAAG;AAC5B;AACAC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,aADQ,2BACQ;AACd,uBAAU,KAAKC,QAAL,CAAcC,IAAxB;AACD;AAHO,GAFkB;AAO5B;AACAC,EAAAA,OAR4B,qBAQlB;AACRP,IAAAA,MAAM,CAACQ,IAAP,WAAe,KAAKJ,aAApB,sBAA6CH,iBAA7C;AACAD,IAAAA,MAAM,CAACQ,IAAP,CAAY,gBAAZ,EAA8B,KAAKC,KAAnC;AACD,GAX2B;AAY5BC,EAAAA,OAZ4B,qBAYlB;AACRV,IAAAA,MAAM,CAACQ,IAAP,WAAe,KAAKJ,aAApB,sBAA6CH,iBAA7C;AACD,GAd2B;AAe5BU,EAAAA,OAf4B,qBAelB;AACRX,IAAAA,MAAM,CAACQ,IAAP,WAAe,KAAKJ,aAApB,sBAA6CH,iBAA7C;AACD,GAjB2B;AAkB5BW,EAAAA,SAlB4B,uBAkBhB;AACVZ,IAAAA,MAAM,CAACQ,IAAP,WAAe,KAAKJ,aAApB,wBAA+CH,iBAA/C;AACD;AApB2B,CAAvB;AAuBP,OAAO,IAAMY,YAAY,GAAG;AAC1B;AACAC,EAAAA,KAAK,EAAE;AACLC,IAAAA,YAAY,EAAE;AACZC,MAAAA,SAAS,EAAE,IADC;AAEZC,MAAAA,IAAI,EAAE,IAFM;AAGZC,MAAAA,OAHY,mBAGJC,QAHI,EAGMC,QAHN,EAGgB;AAC1BpB,QAAAA,MAAM,CAACQ,IAAP,CAAY,YAAZ,EAA0BY,QAA1B;AACApB,QAAAA,MAAM,CAACQ,IAAP,CAAY,YAAZ,EAA0BW,QAA1B;AACD;AANW;AADT;AAFmB,CAArB","sourcesContent":["import { logger } from './';\n\nconst hookMessageSuffix = 'hook called (from mixin)';\n\nexport const lifecycleHooks = {\n  // Computeds\n  computed: {\n    componentName() {\n      return `${this.$options.name} component`;\n    },\n  },\n  // LifeCycle Hooks\n  created() {\n    logger.info(`${this.componentName} created ${hookMessageSuffix}`);\n    logger.info('component data', this.$data);\n  },\n  mounted() {\n    logger.info(`${this.componentName} mounted ${hookMessageSuffix}`);\n  },\n  updated() {\n    logger.info(`${this.componentName} updated ${hookMessageSuffix}`);\n  },\n  destroyed() {\n    logger.info(`${this.componentName} destroyed ${hookMessageSuffix}`);\n  },\n};\n\nexport const heroWatchers = {\n  // Watchers\n  watch: {\n    selectedHero: {\n      immediate: true,\n      deep: true,\n      handler(newValue, oldValue) {\n        logger.info('old values', oldValue);\n        logger.info('new values', newValue);\n      },\n    },\n  },\n};\n"]}]}